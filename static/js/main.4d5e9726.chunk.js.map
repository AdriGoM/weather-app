{"version":3,"sources":["redux/Weather/weatherType.js","redux/Weather/weatherReducer.js","redux/store.js","redux/Weather/weatherAction.js","components/SearchBox.tsx","helpers/weatherHelper.tsx","components/WeatherResult.tsx","components/Footer.tsx","components/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["FETCH_WEATHER_REQUEST","FETCH_WEATHER_SUCCESS","FETCH_WEATHER_FAILURE","initialState","loading","weather","undefined","error","reducer","state","action","type","payload","store","createStore","weatherReducer","composeWithDevTools","applyMiddleware","thunk","fetchWeatherRequest","fetchWeatherSuccess","fetchWeatherFailure","SearchBox","handleClick","inputVal","document","getElementById","value","props","fetchWeather","className","placeholder","id","onClick","this","React","Component","connect","dispatch","city","console","log","process","axios","get","then","response","data","catch","message","toCelsius","source","Math","trunc","getWeatherIcon","weatherId","result","weatherData","title","style","width","position","left","top","transform","textAlign","fontFamily","name","sys","country","src","alt","description","main","temp","temp_max","temp_min","humidity","wind","speed","Footer","marginLeft","Home","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4d5e9726.chunk.js","sourcesContent":["export const FETCH_WEATHER_REQUEST = 'FETCH_WEATHER_REQUEST'\nexport const FETCH_WEATHER_SUCCESS = 'FETCH_WEATHER_SUCCESS'\nexport const FETCH_WEATHER_FAILURE = 'FETCH_WEATHER_FAILURE'","\nimport {\n    FETCH_WEATHER_REQUEST,\n    FETCH_WEATHER_SUCCESS,\n    FETCH_WEATHER_FAILURE\n} from './weatherType'\n\nconst initialState = {\n    loading: false,\n    weather: undefined,\n    error: ''\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_WEATHER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case FETCH_WEATHER_SUCCESS:\n            return {\n                loading: false,\n                weather: action.payload,\n                error: ''\n            }\n        case FETCH_WEATHER_FAILURE:\n            return {\n                loading: false,\n                weather: [],\n                error: action.payload\n            }\n        default: return state\n    }\n}\n\nexport default reducer","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\n\nimport weatherReducer from './Weather/weatherReducer'\n\nconst store = createStore(\n    weatherReducer,\n    composeWithDevTools(applyMiddleware(thunk))\n)\n\nexport default store","import axios from 'axios'\nimport {\n    FETCH_WEATHER_REQUEST,\n    FETCH_WEATHER_SUCCESS,\n    FETCH_WEATHER_FAILURE\n} from './weatherType'\n\nexport const fetchWeather = (city) => {\n    console.log(process.env.REACT_APP_OPENWEATHER_API_KEY)\n    return (dispatch) => {\n        dispatch(fetchWeatherRequest())\n        axios\n            .get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_OPENWEATHER_API_KEY}`)\n            .then(response => {\n                // response.data is the users\n                const weather = response.data\n                dispatch(fetchWeatherSuccess(weather))\n            })\n            .catch(error => {\n                // error.message is the error message\n                dispatch(fetchWeatherFailure(error.message))\n            })\n    }\n}\n\nexport const fetchWeatherRequest = () => {\n    return {\n        type: FETCH_WEATHER_REQUEST\n    }\n}\n\nexport const fetchWeatherSuccess = weather => {\n    return {\n        type: FETCH_WEATHER_SUCCESS,\n        payload: weather\n    }\n}\n\nexport const fetchWeatherFailure = error => {\n    return {\n        type: FETCH_WEATHER_FAILURE,\n        payload: error\n    }\n}","import '../styles/SearchBox.css';\nimport { SiReact } from 'react-icons/si';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchWeather } from '../redux/Weather/weatherAction'\n\ninterface MyProps {\n  fetchWeather \n}\n\nclass SearchBox extends React.Component<MyProps, {}> {\n\n        \n  handleClick = () => {\n    \n    var inputVal = (document.getElementById(\"search-input\") as HTMLInputElement).value;\n    this.props.fetchWeather(inputVal)\n }\n\n    render() {\n      return (\n      <div className=\"container\">\n      <div className=\"search-box\">\n          <input type=\"text\" className=\"search-input\" placeholder=\"Search for a location...\" id=\"search-input\"/>\n          <button className=\"search-button\" onClick={this.handleClick}>\n              <SiReact/>\n          </button>\n      </div>\n  </div>\n    );}\n  }\n\n  const mapDispatchToProps = () => dispatch => {\n    return {\n        fetchWeather: (city) => dispatch(fetchWeather(city))\n    }\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SearchBox)","export const toCelsius = (source) => {\n    if(!source)\n        return \"No data to show!\"\n    if (typeof source !== \"number\")\n        return \"Invalid type of data!\"    \n\n    return Math.trunc(source - 273.15);\n}\n\nexport const toKilometersHour = (source) => {\n    if(!source)\n        return \"No data to show!\"\n    if (typeof source !== \"number\")\n        return \"Invalid type of data!\"    \n\n    return Math.trunc(source * (60*60)/1000);\n}\n\nexport const getWeatherIcon = (weatherId) => {\n    var result = \"\";\n    switch(true) {\n        case (weatherId >= 200 && weatherId < 300):\n            result = \"http://openweathermap.org/img/wn/11d@2x.png\";\n            break;\n        case (weatherId >= 300 && weatherId < 500):\n            result = \"http://openweathermap.org/img/wn/09d@2x.png\";\n            break;\n        case (weatherId >= 500 && weatherId < 600):\n            result = \"http://openweathermap.org/img/wn/10d@2x.png\";\n            break;\n        case (weatherId >= 600 && weatherId < 700):\n            result = \"http://openweathermap.org/img/wn/13d@2x.png\";\n            break;\n        case (weatherId >= 700 && weatherId < 800):\n            result = \"http://openweathermap.org/img/wn/50d@2x.png\";\n            break;\n        case weatherId == 800:\n            result = \"http://openweathermap.org/img/wn/01d@2x.png\";\n            break;\n        case (weatherId > 800):\n            result = \"http://openweathermap.org/img/wn/02d@2x.png\";\n            break;\n        default:\n            break;\n    }\n    return result;\n}","import React from 'react';\nimport { IoPartlySunnySharp } from 'react-icons/io5';\nimport { GrLocation } from 'react-icons/gr';\nimport { WiStrongWind } from 'react-icons/wi';\nimport { WiHumidity } from 'react-icons/wi';\nimport { FaTemperatureHigh } from 'react-icons/fa';\nimport { FaTemperatureLow } from 'react-icons/fa';\nimport { BiError } from 'react-icons/bi';\nimport { BsSearch } from 'react-icons/bs';\nimport { connect } from 'react-redux'\nimport { toCelsius, getWeatherIcon, toKilometersHour } from '../helpers/weatherHelper'\n\n\nfunction WeatherResult({ weatherData, loading, error }) {\n    if (weatherData) {\n        return (\n            loading ? (\n                <div title=\"loadingMessage\" style={{\n                    width: '25%',\n                    position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50% , -50%)', textAlign: 'center', fontFamily: 'Inconsolata'\n                }}>\n                    <h2>Loading</h2>\n                </div>\n            ) : error ? (\n                <div title=\"apiError\" style={{\n                    width: '25%',\n                    position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50% , -50%)', textAlign: 'center', fontFamily: 'Inconsolata'\n                }}>\n                    <h1><BiError /></h1>\n                    <h2>{error}</h2>\n                </div>\n            ) : weatherData && (\n                <div style={{\n                    width: '25%',\n                    position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50% , -50%)', textAlign: 'center', fontFamily: 'Inconsolata'\n                }}>\n                    <h3><GrLocation /> {weatherData.name}, {weatherData.sys.country}</h3>\n                    <img src={getWeatherIcon(weatherData.weather[0].id)} alt=\"weather-img\"></img>\n                    <h2>{weatherData.weather[0].description}, {toCelsius(weatherData.main.temp)}º</h2>\n                    <br></br>\n                    <h2><span className=\"temperature-icon\"><FaTemperatureHigh /></span> {toCelsius(weatherData.main.temp_max)}º</h2>\n                    <h2><FaTemperatureLow /> {toCelsius(weatherData.main.temp_min)}º</h2>\n                    <h2><WiHumidity /> {weatherData.main.humidity}%</h2>\n                    <h2><WiStrongWind /> {toKilometersHour(weatherData.wind.speed)} km/h</h2>\n                </div>\n            )\n        );\n    } else {\n        return (\n            <div className=\"WeatherResult\" title=\"emptyWeather\" style={{\n                width: '25%',\n                position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50% , -50%)', textAlign: 'center', fontFamily: 'Inconsolata'\n            }}>\n                <h2><BsSearch /></h2>\n                <h2>Search for a weather update!</h2>\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        weatherData: state.weather,\n        error: state.error,\n        loading: state.loading\n    }\n}\n\n\nexport default connect(\n    mapStateToProps\n)(WeatherResult)","import React from 'react';\n\nfunction Footer() {\n    return (\n        <div className=\"Footer\" style={{\n            width: '25%',\n            position: 'absolute',\n            left: '50%',\n            top: '90%',\n            transform: 'translate(-50% , -50%)',\n            textAlign: 'center',\n            fontFamily: 'Merriweather'\n        }}>\n            <h4 title='message'> Powered by <span className=\"open-img\" style={{\n            top: '98%',\n            fontFamily: 'Merriweather',\n            marginLeft: '10px'\n        }}><img src=\"https://brands.home-assistant.io/_/openweathermap/logo.png\" alt=\"openWeather-icon\" style={{width: '100px'}}/></span></h4>\n        </div>\n    );\n}\n\nexport default Footer;","import '../styles/Common.css';\nimport SearchBox from './SearchBox'\nimport WeatherResult from './WeatherResult';\nimport Footer from './Footer';\n\nfunction Home() {\n  return (\n    <div className=\"Home\">\n        <SearchBox></SearchBox>\n        <WeatherResult></WeatherResult>\n        <Footer></Footer>\n    </div>\n  );\n}\n\nexport default Home;","import React from 'react';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport './styles/App.css';\nimport Home from './components/Home'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <div className='App'>\n    <Home></Home>\n    </div>\n  </Provider>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}